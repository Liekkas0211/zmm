{"ast":null,"code":"import _defineProperty from \"C:\\\\demo\\\\hunburger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\demo\\\\hunburger\\\\src\\\\Container\\\\BurgerBuilder\\\\BurgerBuilder.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Burger from '../../Components/Burger/Burger';\nimport BuildControls from '../../Components/Burger/OrderSummary/BuildControls';\nconst ingredient_prices = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 0,\n      purchaseable: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      console.log(ingredients);\n      const sumUpPrice = Object.keys(ingredients).map(key => ingredients[key]).reduce((sum, current) => sum + current, 0);\n      this.setState({\n        purchaseable: sumUpPrice > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const newCount = this.state.ingredients[type] + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      const priceAdded = ingredient_prices[type];\n      const newPrice = this.state.totalPrice + priceAdded;\n      updatedIngredients[type] = newCount;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const newCount = this.state.ingredients[type] - 1;\n\n      if (newCount < 0) {\n        console.warn(\"You don't have the ingredient \".concat(type, \" to remove\"));\n        return;\n      }\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      const priceSubstracted = ingredient_prices[type];\n      const newPrice = this.state.totalPrice - priceSubstracted;\n      updatedIngredients[type] = newCount;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n  }\n\n  render() {\n    const disableInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0 ? true : false;\n    }\n\n    console.log(Object.keys(this.state.ingredients));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      totalPrice: this.state.totalPrice,\n      IngredientAdded: this.addIngredientHandler,\n      RemoveIngredient: this.removeIngredientHandler,\n      disabled: disableInfo,\n      purchaseable: this.state.purchaseable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:/demo/hunburger/src/Container/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BuildControls","ingredient_prices","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchaseable","updatePurchaseState","console","log","sumUpPrice","Object","keys","map","key","reduce","sum","current","setState","addIngredientHandler","type","newCount","updatedIngredients","priceAdded","newPrice","removeIngredientHandler","warn","priceSubstracted","render","disableInfo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Burger from '../../Components/Burger/Burger';\r\nimport BuildControls from '../../Components/Burger/OrderSummary/BuildControls';\r\nconst ingredient_prices = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 0,\r\n        purchaseable: false\r\n    }\r\n    updatePurchaseState = ingredients => {\r\n        console.log(ingredients)\r\n        const sumUpPrice = Object.keys(ingredients)\r\n                        .map(key => ingredients[key])\r\n                        .reduce((sum, current) => sum + current , 0)\r\n        this.setState({purchaseable: sumUpPrice > 0})\r\n    }\r\n    addIngredientHandler = (type) => {\r\n        const newCount = this.state.ingredients[type] + 1;\r\n        const updatedIngredients = {\r\n                ...this.state.ingredients\r\n        }\r\n        const priceAdded = ingredient_prices[type];\r\n        const newPrice = this.state.totalPrice + priceAdded;                   \r\n        updatedIngredients[type] = newCount;\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice\r\n        });\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n    removeIngredientHandler = (type) =>{\r\n        const newCount = this.state.ingredients[type] - 1;\r\n        if(newCount < 0){\r\n            console.warn(`You don't have the ingredient ${type} to remove`)\r\n            return;\r\n        }\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        const priceSubstracted = ingredient_prices[type];\r\n        const newPrice = this.state.totalPrice - priceSubstracted;     \r\n        updatedIngredients[type] = newCount;\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice\r\n        });\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n    render(){\r\n        const disableInfo = {\r\n             ...this.state.ingredients\r\n        }\r\n        for(let key in disableInfo){\r\n           disableInfo[key] = (disableInfo[key] <= 0) ? true : false;\r\n        }\r\n        console.log(Object.keys(this.state.ingredients))\r\n        return (\r\n           <div>\r\n                <Burger ingredients = {this.state.ingredients}/>\r\n                <BuildControls     \r\n                    totalPrice={this.state.totalPrice}\r\n                    IngredientAdded={this.addIngredientHandler}\r\n                    RemoveIngredient={this.removeIngredientHandler}\r\n                    disabled={disableInfo}\r\n                    purchaseable={this.state.purchaseable}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}