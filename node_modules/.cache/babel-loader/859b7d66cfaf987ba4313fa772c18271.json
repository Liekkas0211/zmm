{"ast":null,"code":"import _defineProperty from \"C:\\\\demo\\\\hunburger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\demo\\\\hunburger\\\\src\\\\Container\\\\BurgerBuilder\\\\BurgerBuilder.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Burger from '../../Components/Burger/Burger';\nimport BuildControls from '../../Components/Burger/OrderSummary/BuildControls';\nimport Modal from '../../Components/UI/Model/Msgbox';\nconst ingredient_prices = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 0,\n      purchaseable: false,\n      orderstate: false,\n      sumprice: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      }\n    };\n\n    this.addIngredientHandler = type => {\n      const updatedIngredients = _objectSpread({}, this.state.ingredients); //这样的话不会改变原来的ingredients的值，相当于复制该数组。 \n      // const newPrice = ingredient_prices[type];//增加的原料的价格\n\n\n      const updatedsumprice = _objectSpread({}, this.state.sumprice);\n\n      updatedIngredients[type] = this.state.ingredients[type] + 1; //更新原料的数量\n\n      const newPrice = this.state.totalPrice + ingredient_prices[type];\n      updatedsumprice[type] = ingredient_prices[type] * updatedIngredients[type]; //每一个原料的总价\n\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice,\n        sumprice: updatedsumprice\n      });\n\n      if (newPrice > 0) {\n        //注意这里判断的是newprice,totalprice还没更新\n        this.setState({\n          purchaseable: true\n        });\n      }\n\n      console.log(type, this.state.sumprice[type]);\n    };\n\n    this.removeIngredientHandler = type => {\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      const updatedsumprice = _objectSpread({}, this.state.sumprice);\n\n      updatedIngredients[type] = this.state.ingredients[type] - 1;\n      const newPrice = this.state.totalPrice - ingredient_prices[type];\n      updatedsumprice[type] = ingredient_prices[type] * updatedIngredients[type];\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice,\n        sumprice: updatedsumprice\n      });\n\n      if (this.state.newPrice > 0) {\n        this.setState({\n          purchaseable: true\n        });\n      } //还没想好怎么把同步newprice\n\n    };\n\n    this.updateorderstate = () => {\n      this.state.orderstate = true;\n    };\n  }\n\n  render() {\n    const disableInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0 ? true : false;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      sumprice: this.state.sumprice,\n      totalPrice: this.state.totalPrice,\n      IngredientAdded: this.addIngredientHandler,\n      RemoveIngredient: this.removeIngredientHandler,\n      disabled: disableInfo,\n      purchaseable: this.state.purchaseable,\n      orderstate: this.updateorderstate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), \"if(orderstate)\", React.createElement(Modal, {\n      title: \"Demo\",\n      okText: \"\\u786E\\u8BA4\",\n      cancelText: \"\\u53D6\\u6D88\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:/demo/hunburger/src/Container/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BuildControls","Modal","ingredient_prices","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchaseable","orderstate","sumprice","addIngredientHandler","type","updatedIngredients","updatedsumprice","newPrice","setState","console","log","removeIngredientHandler","updateorderstate","render","disableInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Burger from '../../Components/Burger/Burger';\r\nimport BuildControls from '../../Components/Burger/OrderSummary/BuildControls';\r\nimport Modal from '../../Components/UI/Model/Msgbox';\r\nconst ingredient_prices = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 0,\r\n        purchaseable: false,\r\n        orderstate:false,\r\n        sumprice:{\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        }\r\n    }\r\n    \r\n    addIngredientHandler = (type) => {\r\n        const updatedIngredients = {\r\n                ...this.state.ingredients\r\n        }//这样的话不会改变原来的ingredients的值，相当于复制该数组。 \r\n        // const newPrice = ingredient_prices[type];//增加的原料的价格\r\n        const updatedsumprice = {\r\n            ...this.state.sumprice\r\n        }             \r\n        updatedIngredients[type] = this.state.ingredients[type] + 1;//更新原料的数量\r\n        const newPrice = this.state.totalPrice + ingredient_prices[type];\r\n        updatedsumprice[type]=ingredient_prices[type]* updatedIngredients[type];//每一个原料的总价\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice,\r\n            sumprice:updatedsumprice\r\n        });\r\n       \r\n        if(newPrice>0){ //注意这里判断的是newprice,totalprice还没更新\r\n            this.setState({ purchaseable:true})\r\n        }\r\n        console.log( type,this.state.sumprice[type])\r\n    }\r\n    removeIngredientHandler = (type) =>{\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        const updatedsumprice = {\r\n            ...this.state.sumprice\r\n        }      \r\n        updatedIngredients[type] = this.state.ingredients[type] - 1;\r\n        const newPrice = this.state.totalPrice - ingredient_prices[type];    \r\n        updatedsumprice[type]=ingredient_prices[type]* updatedIngredients[type];\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice,\r\n            sumprice:updatedsumprice\r\n        });\r\n         if(this.state.newPrice>0){\r\n             this.setState({ purchaseable:true})\r\n         }//还没想好怎么把同步newprice\r\n    }\r\n    \r\n    updateorderstate=()=>{ \r\n        this.state.orderstate=true;\r\n          }\r\n    render(){\r\n        const disableInfo = {\r\n             ...this.state.ingredients\r\n        }\r\n        for(let key in disableInfo){\r\n           disableInfo[key] = (disableInfo[key] <= 0) ? true : false;\r\n        }\r\n        return (\r\n           <div>\r\n                <Burger ingredients = {this.state.ingredients}/>\r\n                <BuildControls \r\n                    sumprice={this.state.sumprice}   \r\n                    totalPrice={this.state.totalPrice}\r\n                    IngredientAdded={this.addIngredientHandler}\r\n                    RemoveIngredient={this.removeIngredientHandler}\r\n                    disabled={disableInfo}\r\n                    purchaseable={this.state.purchaseable}\r\n                    orderstate={this.updateorderstate}\r\n                />\r\n                if(orderstate){\r\n                <Modal\r\n                title=\"Demo\"\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"/>}\r\n\r\n                   \r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}