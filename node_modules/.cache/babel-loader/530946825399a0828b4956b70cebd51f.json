{"ast":null,"code":"import _defineProperty from \"C:\\\\demo\\\\hunburger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\demo\\\\hunburger\\\\src\\\\Container\\\\BurgerBuilder\\\\BurgerBuilder.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Burger from '../../Components/Burger/Burger';\nimport BuildControls from '../../components/Burger/OrderSummary/BuildControls';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 0,\n      purchaseable: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sumUpPrice = Object.keys(ingredients).map(key => ingredients[key]).reduce((sum, current) => sum + current, 0);\n      this.setState({\n        purchaseable: sumUpPrice > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const newCount = this.state.ingredients[type] + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      const priceAdded = INGREDIENT_PRICES[type];\n      const newPrice = this.state.totalPrice + priceAdded;\n      updatedIngredients[type] = newCount;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const newCount = this.state.ingredients[type] - 1;\n\n      if (newCount < 0) {\n        console.warn(\"You don't have the ingredient \".concat(type, \" to remove\"));\n        return;\n      }\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      const priceSubstracted = INGREDIENT_PRICES[type];\n      const newPrice = this.state.totalPrice - priceSubstracted;\n      updatedIngredients[type] = newCount;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n  }\n\n  render() {\n    const disableInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0 ? true : false;\n    }\n\n    return (// <Auxiliary>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        totalPrice: this.state.totalPrice,\n        IngredientAdded: this.addIngredientHandler,\n        RemoveIngredient: this.removeIngredientHandler,\n        disabled: disableInfo,\n        purchaseable: this.state.purchaseable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })) // </Auxiliary>\n\n    );\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:/demo/hunburger/src/Container/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BuildControls","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchaseable","updatePurchaseState","sumUpPrice","Object","keys","map","key","reduce","sum","current","setState","addIngredientHandler","type","newCount","updatedIngredients","priceAdded","newPrice","removeIngredientHandler","console","warn","priceSubstracted","render","disableInfo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Burger from '../../Components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/OrderSummary/BuildControls';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 0,\r\n        purchaseable: false\r\n    }\r\n\r\n    updatePurchaseState = ingredients => {\r\n\r\n        const sumUpPrice = Object.keys(ingredients)\r\n                        .map(key => ingredients[key])\r\n                        .reduce((sum, current) => sum + current , 0)\r\n\r\n        this.setState({purchaseable: sumUpPrice > 0})\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const newCount = this.state.ingredients[type] + 1;\r\n        const updatedIngredients = {\r\n                ...this.state.ingredients\r\n        }\r\n        const priceAdded = INGREDIENT_PRICES[type];\r\n\r\n        const newPrice = this.state.totalPrice + priceAdded;\r\n                       \r\n        updatedIngredients[type] = newCount;\r\n\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice\r\n        });\r\n\r\n        this.updatePurchaseState(updatedIngredients);\r\n\r\n    }\r\n\r\n    removeIngredientHandler = (type) =>{\r\n\r\n        const newCount = this.state.ingredients[type] - 1;\r\n\r\n        if(newCount < 0){\r\n            console.warn(`You don't have the ingredient ${type} to remove`)\r\n            return;\r\n        }\r\n\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n\r\n        const priceSubstracted = INGREDIENT_PRICES[type];\r\n        const newPrice = this.state.totalPrice - priceSubstracted;     \r\n\r\n        updatedIngredients[type] = newCount;\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice\r\n        });\r\n\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n\r\n    render(){\r\n        const disableInfo = {\r\n             ...this.state.ingredients\r\n        }\r\n\r\n        for(let key in disableInfo){\r\n           disableInfo[key] = (disableInfo[key] <= 0) ? true : false;\r\n        }\r\n\r\n        return (\r\n           // <Auxiliary>\r\n           <div>\r\n                <Burger ingredients = {this.state.ingredients}/>\r\n                <BuildControls\r\n                    totalPrice={this.state.totalPrice}\r\n                    IngredientAdded={this.addIngredientHandler}\r\n                    RemoveIngredient={this.removeIngredientHandler}\r\n                    disabled={disableInfo}\r\n                    purchaseable={this.state.purchaseable}\r\n                />\r\n            </div>\r\n           // </Auxiliary>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}