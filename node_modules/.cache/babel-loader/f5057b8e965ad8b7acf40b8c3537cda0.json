{"ast":null,"code":"var _jsxFileName = \"C:\\\\demo\\\\hunburger\\\\src\\\\Components\\\\UI\\\\Model\\\\Msgbox.js\";\nimport React, { Component } from 'react';\nimport { Modal, Text, TouchableHighlight, TouchableOpacity, View, StyleSheet, Image, TextInput } from 'react-native'; // let Dimensions = require('Dimensions');\n// let screenWidth = Dimensions.get('window').width;\n// let dialogWidth = screenWidth-80;\n\nexport default class ModalExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false\n    };\n  }\n\n  setModalVisible(visible) {\n    this.setState({\n      modalVisible: visible\n    });\n  }\n\n  onClose() {\n    this.setState({\n      modalVisible: false\n    });\n  }\n\n  render() {\n    return React.createElement(View, {\n      style: {\n        marginTop: 22\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: this.state.modalVisible,\n      onRequestClose: () => {\n        this.setModalVisible(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        flex: 1\n      },\n      onPress: this.onClose.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(View, {\n      style: styles.innerContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Title\"), React.createElement(TextInput, {\n      style: styles.inputtext,\n      placeholder: \"Type here!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(View, {\n      style: styles.btnContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(TouchableHighlight, {\n      onPress: () => {\n        this.setModalVisible(!this.state.modalVisible);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Text, {\n      style: styles.hidemodalTxt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\u5173\\u95ED\"))))))), React.createElement(TouchableHighlight, {\n      onPress: () => {\n        this.setModalVisible(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\u5F39\\u51FA\\u5BF9\\u8BDD\\u6846\")));\n  }\n\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 40,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  innerContainer: {\n    borderRadius: 10,\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    padding: 20\n  },\n  btnContainer: {\n    width: 100,\n    borderTopWidth: 1,\n    borderTopColor: '#777',\n    alignItems: 'center'\n  },\n  inputtext: {\n    width: 100 - 20,\n    margin: 10\n  },\n  hidemodalTxt: {\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["C:/demo/hunburger/src/Components/UI/Model/Msgbox.js"],"names":["React","Component","Modal","Text","TouchableHighlight","TouchableOpacity","View","StyleSheet","Image","TextInput","ModalExample","constructor","props","state","modalVisible","setModalVisible","visible","setState","onClose","render","marginTop","flex","bind","styles","container","innerContainer","inputtext","btnContainer","hidemodalTxt","create","justifyContent","padding","backgroundColor","borderRadius","alignItems","width","borderTopWidth","borderTopColor","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Modal,\r\n    Text,\r\n    TouchableHighlight,\r\n    TouchableOpacity,\r\n    View ,\r\n    StyleSheet,\r\n    Image,\r\n    TextInput} from 'react-native';\r\n// let Dimensions = require('Dimensions');\r\n// let screenWidth = Dimensions.get('window').width;\r\n// let dialogWidth = screenWidth-80;\r\nexport default class ModalExample extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {modalVisible: false};\r\n    }\r\n\r\n    setModalVisible(visible) {\r\n        this.setState({modalVisible: visible});\r\n    }\r\n    onClose() {\r\n        this.setState({modalVisible: false});\r\n    }\r\n    render() {\r\n        return (\r\n            <View style={{marginTop: 22}}>\r\n                <Modal\r\n                    animationType={\"slide\"}\r\n                    transparent={true}\r\n                    visible={this.state.modalVisible}\r\n                    onRequestClose={() => {this.setModalVisible(false)}}\r\n                >\r\n                    <TouchableOpacity style={{flex:1}} onPress={this.onClose.bind(this)}>\r\n                    <View style={styles.container}>\r\n                        <View style={styles.innerContainer}>\r\n                            <Text>Title</Text>\r\n                            <TextInput\r\n                                style={styles.inputtext}\r\n                                placeholder=\"Type here!\"\r\n                            />\r\n                            <View style={styles.btnContainer}>\r\n                                <TouchableHighlight onPress={() => {\r\n                                    this.setModalVisible(!this.state.modalVisible)\r\n                                }}>\r\n                                    <Text  style={styles.hidemodalTxt}>关闭</Text>\r\n                                </TouchableHighlight>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                    </TouchableOpacity>\r\n                </Modal>\r\n\r\n                <TouchableHighlight onPress={() => {\r\n                    this.setModalVisible(true)\r\n                }}>\r\n                    <Text>弹出对话框</Text>\r\n                </TouchableHighlight>\r\n\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        padding: 40,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\r\n    },\r\n    innerContainer: {\r\n        borderRadius: 10,\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: 20\r\n\r\n    },\r\n    btnContainer:{\r\n        width:100,\r\n        borderTopWidth:1,\r\n        borderTopColor:'#777',\r\n        alignItems:'center'\r\n    },\r\n    inputtext:{\r\n        width:100-20,\r\n        margin:10,\r\n    },\r\n    hidemodalTxt: {\r\n        marginTop:10,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}