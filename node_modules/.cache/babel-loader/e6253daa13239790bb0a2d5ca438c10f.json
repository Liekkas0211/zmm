{"ast":null,"code":"var _jsxFileName = \"C:\\\\demo\\\\hunburger\\\\src\\\\Components\\\\Burger\\\\OrderSummary\\\\BuildControls.js\";\nimport React, { Component } from 'react';\nimport classes from './BuildControls.module.css';\nimport BuildControl from '../BuildControls/BuildControl';\nimport Modal from '../../UI/Model/Msgbox';\nconst controls = [//数组\n{\n  label: 'Salad',\n  type: 'salad'\n}, {\n  label: 'Bacon',\n  type: 'bacon'\n}, {\n  label: 'Cheese',\n  type: 'cheese'\n}, {\n  label: 'Meat',\n  type: 'meat'\n}];\n\nclass buildControls extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      console.log('onClose');\n    };\n\n    this.onConfirm = () => {\n      console.log('onConfirm');\n    };\n\n    this.state = {\n      visible: false\n    };\n  }\n\n  render() {\n    const visible = this.state.visible; //Array.map() 方法返回一个新数组，\n    //数组中的元素为原始数组元素调用函数处理后的值，同时不会改变原来的数组。\n\n    const ingredientcontrol = control => {\n      return React.createElement(BuildControl, {\n        key: control.label,\n        label: control.label //bind()方法主要就是将函数绑定到某个对象，bind()会创建一个函数，\n        //函数体内的this对象的值会被绑定到传入bind()第一个参数的值，\n        //例如，f.bind(obj)，实际上可以理解为obj.f()，这时，f函数体内的this自然指向的是obj\n        ,\n        add: props.IngredientAdded.bind(this, control.type) //IngredientAdded是buildControls定义的\n        ,\n        remove: props.RemoveIngredient.bind(this, control.type),\n        disabled: props.disabled[control.type],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    };\n\n    return React.createElement(\"div\", {\n      className: classes.BuildControls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      visible: visible,\n      title: \"\\u8FD9\\u662F\\u81EA\\u5B9A\\u4E49\\u7684title\",\n      onClose: this.onClose,\n      onConfirm: this.onConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\u8FD9\\u662F\\u81EA\\u5B9A\\u4E49\\u7684content\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Current Price: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"\\xA3\", props.totalPrice.toFixed(2)), \" \"), controls.map(ingredientcontrol), React.createElement(\"button\", {\n      onClick: () => this.showModal() //ordersum 点击计算总价按钮之后的账单\n      ,\n      className: classes.OrderButton,\n      disabled: !props.purchaseable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"ORDER NOW\"));\n  }\n\n}\n\nexport default buildControls;","map":{"version":3,"sources":["C:/demo/hunburger/src/Components/Burger/OrderSummary/BuildControls.js"],"names":["React","Component","classes","BuildControl","Modal","controls","label","type","buildControls","constructor","props","showModal","setState","visible","onClose","console","log","onConfirm","state","render","ingredientcontrol","control","IngredientAdded","bind","RemoveIngredient","disabled","BuildControls","totalPrice","toFixed","map","OrderButton","purchaseable"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,MAAMC,QAAQ,GAAG,CAAC;AACd;AAACC,EAAAA,KAAK,EAAG,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CADa,EAEb;AAACD,EAAAA,KAAK,EAAG,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAFa,EAGb;AAACD,EAAAA,KAAK,EAAG,QAAT;AAAmBC,EAAAA,IAAI,EAAE;AAAzB,CAHa,EAIb;AAACD,EAAAA,KAAK,EAAG,MAAT;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CAJa,CAAjB;;AAOA,MAAMC,aAAN,SAA4BP,SAA5B,CAAqC;AACnCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKrBC,SALqB,GAKT,MAAM;AACV,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd;AAGP,KAToB;;AAAA,SAUrBC,OAVqB,GAUX,MAAM;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAZoB;;AAAA,SAarBC,SAbqB,GAaT,MAAM;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,KAfoB;;AAEnB,SAAKE,KAAL,GAAa;AACXL,MAAAA,OAAO,EAAE;AADE,KAAb;AAEE;;AAYHM,EAAAA,MAAM,GAAE;AAAA,UACCN,OADD,GACa,KAAKK,KADlB,CACCL,OADD,EAEH;AACA;;AAEF,UAAMO,iBAAiB,GAAEC,OAAD,IAAa;AACjC,aAAO,oBAAC,YAAD;AACN,QAAA,GAAG,EAAEA,OAAO,CAACf,KADP;AAEN,QAAA,KAAK,EAAEe,OAAO,CAACf,KAFT,CAGN;AACA;AACA;AALM;AAMN,QAAA,GAAG,EAAEI,KAAK,CAACY,eAAN,CAAsBC,IAAtB,CAA2B,IAA3B,EAAiCF,OAAO,CAACd,IAAzC,CANC,CAM8C;AAN9C;AAON,QAAA,MAAM,EAAEG,KAAK,CAACc,gBAAN,CAAuBD,IAAvB,CAA4B,IAA5B,EAAiCF,OAAO,CAACd,IAAzC,CAPF;AAQN,QAAA,QAAQ,EAAEG,KAAK,CAACe,QAAN,CAAeJ,OAAO,CAACd,IAAvB,CARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAUI,KAXR;;AAYD,WACI;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACwB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AACD,MAAA,OAAO,EAAEb,OADR;AAEF,MAAA,KAAK,EAAC,2CAFJ;AAGF,MAAA,OAAO,EAAE,KAAKC,OAHZ;AAIF,MAAA,SAAS,EAAE,KAAKG,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADA,EASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUP,KAAK,CAACiB,UAAN,CAAiBC,OAAjB,CAAyB,CAAzB,CAAV,CAAlB,MATD,EAWEvB,QAAQ,CAACwB,GAAT,CAAaT,iBAAb,CAXF,EAYC;AAAS,MAAA,OAAO,EAAE,MAAM,KAAKT,SAAL,EAAxB,CAA0C;AAA1C;AACC,MAAA,SAAS,EAAET,OAAO,CAAC4B,WADpB;AAEC,MAAA,QAAQ,EAAE,CAACpB,KAAK,CAACqB,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZD,CADJ;AAiBG;;AAnD+B;;AAqDrC,eAAevB,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport classes from './BuildControls.module.css'\nimport BuildControl from '../BuildControls/BuildControl';\nimport Modal from '../../UI/Model/Msgbox';\nconst controls = [//数组\n    {label : 'Salad', type: 'salad'},\n    {label : 'Bacon', type: 'bacon'},\n    {label : 'Cheese', type: 'cheese'},\n    {label : 'Meat', type: 'meat'},\n]\n\nclass buildControls extends Component{\n  constructor(props) {\n    super(props)\n  this.state = {\n    visible: false,\n  }}\nshowModal = () => {\n        this.setState({\n            visible: true,\n        });\n}\nonClose = () => {\n    console.log('onClose');\n}\nonConfirm = () => {\n    console.log('onConfirm');\n}\n render(){\n  const { visible } = this.state\n      //Array.map() 方法返回一个新数组，\n      //数组中的元素为原始数组元素调用函数处理后的值，同时不会改变原来的数组。\n      \n    const ingredientcontrol=(control) => {\n        return <BuildControl\n         key={control.label} \n         label={control.label} \n         //bind()方法主要就是将函数绑定到某个对象，bind()会创建一个函数，\n         //函数体内的this对象的值会被绑定到传入bind()第一个参数的值，\n         //例如，f.bind(obj)，实际上可以理解为obj.f()，这时，f函数体内的this自然指向的是obj\n         add={props.IngredientAdded.bind(this, control.type)}//IngredientAdded是buildControls定义的\n         remove={props.RemoveIngredient.bind(this,control.type)}\n         disabled={props.disabled[control.type]}\n         />\n           }\n   return ( \n       <div className={classes.BuildControls}>\n       <Modal\n      visible={visible}\n     title='这是自定义的title'\n     onClose={this.onClose}\n     onConfirm={this.onConfirm}\n      >\n      这是自定义的content\n      </Modal>\n        <p>Current Price: <strong>£{props.totalPrice.toFixed(2)}</strong> </p>\n        {/* toFixed() 方法可把 Number 四舍五入为指定小数位数的数字。  */}\n        {controls.map(ingredientcontrol)} \n        <button  onClick={() => this.showModal()} //ordersum 点击计算总价按钮之后的账单\n         className={classes.OrderButton}\n         disabled={!props.purchaseable}>ORDER NOW</button>\n    </div>\n   );}\n  }\nexport default buildControls;"]},"metadata":{},"sourceType":"module"}