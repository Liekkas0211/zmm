{"ast":null,"code":"var _jsxFileName = \"C:\\\\demo\\\\hunburger\\\\src\\\\Components\\\\Burger\\\\OrderSummary\\\\BuildControls.js\";\nimport React from 'react';\nimport classes from './BuildControls.module.css';\nimport BuildControl from '../BuildControls/BuildControl';\nimport Msgbox from '../../UI/Model/Msgbox';\nconst controls = [//数组\n{\n  label: 'Salad',\n  type: 'salad'\n}, {\n  label: 'Bacon',\n  type: 'bacon'\n}, {\n  label: 'Cheese',\n  type: 'cheese'\n}, {\n  label: 'Meat',\n  type: 'meat'\n}];\n\nconst buildControls = props => {\n  const ordersum = () => {\n    // var info='total price:£ '+props.totalPrice+'';   //从burgerbuilder那里传过来的参数+'salad'+props.sumprice[salad]\n    // console.log(props.totalPrice);\n    // console.log(props.sumprice)\n    // alert(info);\n    React.createElement(Msgbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }; //Array.map() 方法返回一个新数组，\n  //数组中的元素为原始数组元素调用函数处理后的值，同时不会改变原来的数组。\n\n\n  const ingredientcontrol = control => {\n    return React.createElement(BuildControl, {\n      key: control.label,\n      label: control.label //bind()方法主要就是将函数绑定到某个对象，bind()会创建一个函数，\n      //函数体内的this对象的值会被绑定到传入bind()第一个参数的值，\n      //例如，f.bind(obj)，实际上可以理解为obj.f()，这时，f函数体内的this自然指向的是obj\n      ,\n      add: props.IngredientAdded.bind(this, control.type) //IngredientAdded是buildControls定义的\n      ,\n      remove: props.RemoveIngredient.bind(this, control.type),\n      disabled: props.disabled[control.type],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.BuildControls,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Current Price: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"\\xA3\", props.totalPrice.toFixed(2)), \" \"), controls.map(ingredientcontrol), React.createElement(\"button\", {\n    onClick: ordersum //ordersum 点击计算总价按钮之后的账单\n    ,\n    className: classes.OrderButton,\n    disabled: !props.purchaseable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"ORDER NOW\"));\n};\n\nexport default buildControls;","map":{"version":3,"sources":["C:/demo/hunburger/src/Components/Burger/OrderSummary/BuildControls.js"],"names":["React","classes","BuildControl","Msgbox","controls","label","type","buildControls","props","ordersum","ingredientcontrol","control","IngredientAdded","bind","RemoveIngredient","disabled","BuildControls","totalPrice","toFixed","map","OrderButton","purchaseable"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,MAAMC,QAAQ,GAAG,CAAC;AACd;AAACC,EAAAA,KAAK,EAAG,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CADa,EAEb;AAACD,EAAAA,KAAK,EAAG,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAFa,EAGb;AAACD,EAAAA,KAAK,EAAG,QAAT;AAAmBC,EAAAA,IAAI,EAAE;AAAzB,CAHa,EAIb;AAACD,EAAAA,KAAK,EAAG,MAAT;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CAJa,CAAjB;;AAOA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAMC,QAAQ,GAAC,MAAI;AACf;AACA;AACA;AACA;AACA,wBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GANH,CAD6B,CAQ3B;AACA;;;AACF,QAAMC,iBAAiB,GAAEC,OAAD,IAAa;AACjC,WAAO,oBAAC,YAAD;AACN,MAAA,GAAG,EAAEA,OAAO,CAACN,KADP;AAEN,MAAA,KAAK,EAAEM,OAAO,CAACN,KAFT,CAGN;AACA;AACA;AALM;AAMN,MAAA,GAAG,EAAEG,KAAK,CAACI,eAAN,CAAsBC,IAAtB,CAA2B,IAA3B,EAAiCF,OAAO,CAACL,IAAzC,CANC,CAM8C;AAN9C;AAON,MAAA,MAAM,EAAEE,KAAK,CAACM,gBAAN,CAAuBD,IAAvB,CAA4B,IAA5B,EAAiCF,OAAO,CAACL,IAAzC,CAPF;AAQN,MAAA,QAAQ,EAAEE,KAAK,CAACO,QAAN,CAAeJ,OAAO,CAACL,IAAvB,CARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAUH,GAXD;;AAYD,SAAS;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACe,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAUR,KAAK,CAACS,UAAN,CAAiBC,OAAjB,CAAyB,CAAzB,CAAV,CAAlB,MADI,EAGHd,QAAQ,CAACe,GAAT,CAAaT,iBAAb,CAHG,EAIJ;AAAS,IAAA,OAAO,EAAED,QAAlB,CAA4B;AAA5B;AACA,IAAA,SAAS,EAAER,OAAO,CAACmB,WADnB;AAEC,IAAA,QAAQ,EAAE,CAACZ,KAAK,CAACa,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJI,CAAT;AAQE,CA9BL;;AAgCA,eAAed,aAAf","sourcesContent":["import React from 'react'\nimport classes from './BuildControls.module.css'\nimport BuildControl from '../BuildControls/BuildControl';\nimport Msgbox from '../../UI/Model/Msgbox';\nconst controls = [//数组\n    {label : 'Salad', type: 'salad'},\n    {label : 'Bacon', type: 'bacon'},\n    {label : 'Cheese', type: 'cheese'},\n    {label : 'Meat', type: 'meat'},\n]\n\nconst buildControls = (props) => {\n    const ordersum=()=>{ \n        // var info='total price:£ '+props.totalPrice+'';   //从burgerbuilder那里传过来的参数+'salad'+props.sumprice[salad]\n        // console.log(props.totalPrice);\n        // console.log(props.sumprice)\n        // alert(info);\n        <Msgbox/>\n      }\n      //Array.map() 方法返回一个新数组，\n      //数组中的元素为原始数组元素调用函数处理后的值，同时不会改变原来的数组。\n    const ingredientcontrol=(control) => {\n        return <BuildControl\n         key={control.label} \n         label={control.label} \n         //bind()方法主要就是将函数绑定到某个对象，bind()会创建一个函数，\n         //函数体内的this对象的值会被绑定到传入bind()第一个参数的值，\n         //例如，f.bind(obj)，实际上可以理解为obj.f()，这时，f函数体内的this自然指向的是obj\n         add={props.IngredientAdded.bind(this, control.type)}//IngredientAdded是buildControls定义的\n         remove={props.RemoveIngredient.bind(this,control.type)}\n         disabled={props.disabled[control.type]}\n         />\n    }\n   return ( <div className={classes.BuildControls}>\n        <p>Current Price: <strong>£{props.totalPrice.toFixed(2)}</strong> </p>\n        {/* toFixed() 方法可把 Number 四舍五入为指定小数位数的数字。  */}\n        {controls.map(ingredientcontrol)} \n        <button  onClick={ordersum} //ordersum 点击计算总价按钮之后的账单\n        className={classes.OrderButton}\n         disabled={!props.purchaseable}>ORDER NOW</button>\n    </div>\n   )};\n\nexport default buildControls;"]},"metadata":{},"sourceType":"module"}