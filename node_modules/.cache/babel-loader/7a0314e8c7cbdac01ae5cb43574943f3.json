{"ast":null,"code":"var _jsxFileName = \"C:\\\\demo\\\\hunburger\\\\src\\\\form\\\\form.js\";\nimport { Input, DatePicker } from 'antd';\nimport { Select } from 'antd';\nimport { Form, Tooltip, Icon, Cascader, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, withRouter } from 'react-router-dom';\nimport Burger from '../Components/Burger/Burger';\nimport classes from './form.module.css';\nimport axios from \"axios\";\nconst TextArea = Input.TextArea;\nconst Option = Select.Option;\nconst AutoCompleteOption = AutoComplete.Option;\n\nclass Info extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      totalprice3: 0,\n      USER_ADDRESS: \"\",\n      ORDER_REMARK: \"\",\n      USER_NAME: \"\",\n      USER_PHONE: \"\",\n      ingredients3: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n\n    this.compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    this.validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    this.handleWebsiteChange = value => {\n      let autoCompleteResult;\n\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['.com', '.org', '.net'].map(domain => \"\".concat(value).concat(domain));\n      }\n\n      this.setState({\n        autoCompleteResult\n      });\n    };\n\n    this.submit = () => {\n      console.log(this.state);\n      let order = {\n        \"MCH_ID\": \"41708307\",\n        \"ORDER_BACON\": this.state.ingredients3.bacon,\n        \"ORDER_CHEESE\": this.state.ingredients3.cheese,\n        \"ORDER_MEAT\": this.state.ingredients3.meat,\n        \"ORDER_REMARK\": this.state.ORDER_REMARK,\n        \"ORDER_SALAD\": this.state.ingredients3.salad,\n        \"TOTAL_FEE\": this.state.totalprice3,\n        \"USER_ADDRESS\": this.state.USER_ADDRESS,\n        \"USER_NAME\": this.state.USER_NAME,\n        \"USER_PHONE\": this.state.USER_PHONE\n      };\n      console.log(order);\n      axios.post(\"https://5y5jmjim9l.execute-api.cn-northwest-1.amazonaws.com.cn/prod/order\", order).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.props.history.push(\"/order\");\n      this.props.history.go();\n    };\n\n    this.handlename = event => {\n      if (event && event.target && event.target.value) {\n        let value = event.target.value;\n        this.setState(() => ({\n          USER_NAME: value\n        }));\n      }\n    };\n\n    this.handleaddress = event => {\n      if (event && event.target && event.target.value) {\n        let value = event.target.value;\n        this.setState(() => ({\n          USER_ADDRESS: value\n        }));\n      }\n    };\n\n    this.handlephone = event => {\n      if (event && event.target && event.target.value) {\n        let value = event.target.value;\n        this.setState(() => ({\n          USER_PHONE: value\n        }));\n      }\n    };\n\n    this.handleremark = event => {\n      if (event && event.target && event.target.value) {\n        let value = event.target.value;\n        this.setState(() => ({\n          ORDER_REMARK: value\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      ingredients3: this.props.location.state.ingredients2,\n      totalprice3: this.props.location.state.totalprice2\n    });\n    console.log(this.state.totalprice3);\n  }\n\n  handleChange(value) {\n    console.log(\"selected \".concat(value));\n  }\n\n  checkEmail(rule, value, callback) {\n    var re = /^(\\w-*\\.*)+@(\\w-?)+(\\.\\w{2,})+$/;\n\n    if (re.test(value)) {\n      callback();\n    } else {}\n  }\n\n  checkname(rule, value, callback) {\n    var re = /^[a-zA-Z\\u4e00-\\u9fa5]+$/;\n\n    if (!re.test(value)) {\n      callback(\"Please input your name!Chinese character or letter\");\n    } else {}\n  }\n\n  checkPhone(rule, value, callback) {\n    if (!/^1(3|4|5|7|8)\\d{9}$/.test(value)) {\n      callback(\"手机号码有误，请重填\");\n    } else {}\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const autoCompleteResult = this.state.autoCompleteResult;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const websiteOptions = autoCompleteResult.map(website => React.createElement(AutoCompleteOption, {\n      key: website,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, website));\n    let buttons = React.createElement(\"div\", {\n      className: classes.butn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: classes.confirm,\n      onClick: () => {\n        document.getElementById(\"info\").scrollIntoView();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"\\u786E\\u5B9A\"), React.createElement(\"button\", {\n      className: classes.close,\n      onClick: () => {\n        this.props.history.push(\"/\");\n        this.props.history.go();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"\\u53D6\\u6D88\"));\n    const Option = Select.Option;\n    let forms = React.createElement(\"div\", {\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"\\u8BF7\\u8F93\\u5165\\u4F60\\u7684\\u8054\\u7CFB\\u4FE1\\u606F\")), React.createElement(Form, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, getFieldDecorator('name', {\n      rules: [{\n        required: true,\n        message: 'Please input your name!Chinese character or letter'\n      }, {\n        validator: this.checkname\n      }]\n    })(React.createElement(Input, {\n      style: {\n        width: 300\n      },\n      onChange: event => this.handlename(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Street\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Your current address.\",\n      style: {\n        width: 300\n      },\n      onChange: event => this.handleaddress(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Phone Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, getFieldDecorator('phone', {\n      rules: [{\n        validator: this.checkPhone\n      }]\n    }, {\n      required: true,\n      message: 'Please input your Phone Number!'\n    })(React.createElement(Input, {\n      style: {\n        width: 300\n      },\n      onChange: event => this.handlephone(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        validator: this.checkEmail\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }]\n    })(React.createElement(Input, {\n      style: {\n        width: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      rows: 3,\n      placeholder: \"For example, don't pepper.\",\n      style: {\n        width: 300\n      },\n      onChange: event => this.handleremark(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    })), React.createElement(Select, {\n      defaultValue: \"fastest\",\n      style: {\n        width: 300\n      },\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"lowest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"Jack\"), React.createElement(Option, {\n      value: \"middlest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Lucy\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      style: {\n        width: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: classes.order,\n      onClick: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"\\u4E0B\\u5355\"));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.hope,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \" We hope is tastes well !!:)\")), React.createElement(Burger, {\n      ingredients: this.state.ingredients3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: classes.hope1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \" totalprice:\", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \" \\xA3\", Math.round(this.props.location.state.totalprice2 * 100) / 100)), buttons, React.createElement(\"div\", {\n      id: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), forms, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(Form.create()(Info));","map":{"version":3,"sources":["C:/demo/hunburger/src/form/form.js"],"names":["Input","DatePicker","Select","Form","Tooltip","Icon","Cascader","Row","Col","Checkbox","Button","AutoComplete","React","Component","BrowserRouter","Router","withRouter","Burger","classes","axios","TextArea","Option","AutoCompleteOption","Info","state","totalprice3","USER_ADDRESS","ORDER_REMARK","USER_NAME","USER_PHONE","ingredients3","salad","bacon","cheese","meat","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","map","domain","submit","order","post","then","res","catch","history","push","go","handlename","event","handleaddress","handlephone","handleremark","componentDidMount","location","ingredients2","totalprice2","handleChange","checkEmail","re","test","checkname","checkPhone","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","websiteOptions","website","buttons","butn","confirm","document","getElementById","scrollIntoView","close","forms","rules","required","message","validator","width","hope","hope1","Math","round","create"],"mappings":"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","sourcesContent":["import { Input,DatePicker } from 'antd';\r\nimport { Select } from 'antd';\r\nimport {\r\n  Form,\r\n\r\n  Tooltip,\r\n  Icon,\r\n  Cascader,\r\n \r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  AutoComplete,\r\n} from 'antd';\r\nimport React, { Component } from 'react';\r\nimport { BrowserRouter as Router,withRouter} from 'react-router-dom';\r\nimport Burger from '../Components/Burger/Burger';\r\nimport classes from './form.module.css';\r\nimport axios from \"axios\"; \r\n const { TextArea } = Input;\r\n const { Option } = Select;\r\n  const AutoCompleteOption = AutoComplete.Option;\r\n\r\nclass Info extends Component{\r\n  \r\n  \r\n  state = {\r\n      totalprice3:0,\r\n      USER_ADDRESS:\"\" ,\r\n      ORDER_REMARK:\"\",\r\n      USER_NAME: \"\",\r\n      USER_PHONE: \"\",\r\n      ingredients3: {\r\n        salad: 0,\r\n        bacon: 0,\r\n        cheese: 0,\r\n        meat: 0\r\n    },\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n    }\r\n\r\n    handleSubmit = e => {\r\n      e.preventDefault();\r\n      this.props.form.validateFieldsAndScroll((err, values) => {\r\n        if (!err) {\r\n          console.log('Received values of form: ', values);\r\n        }\r\n      });\r\n    };\r\n  \r\n    handleConfirmBlur = e => {\r\n      const { value } = e.target;\r\n      this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n    };\r\n  \r\n    compareToFirstPassword = (rule, value, callback) => {\r\n      const { form } = this.props;\r\n      if (value && value !== form.getFieldValue('password')) {\r\n        callback('Two passwords that you enter is inconsistent!');\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n  \r\n    validateToNextPassword = (rule, value, callback) => {\r\n      const { form } = this.props;\r\n      if (value && this.state.confirmDirty) {\r\n        form.validateFields(['confirm'], { force: true });\r\n      }\r\n      callback();\r\n    };\r\n  \r\n    handleWebsiteChange = value => {\r\n      let autoCompleteResult;\r\n      if (!value) {\r\n        autoCompleteResult = [];\r\n      } else {\r\n        autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\r\n      }\r\n      this.setState({ autoCompleteResult });\r\n    };\r\n  \r\n\r\n\r\n\r\n    componentDidMount()\r\n  { \r\n    \r\n     this.setState({\r\n    ingredients3:this.props.location.state.ingredients2,\r\n    totalprice3:this.props.location.state.totalprice2\r\n  })\r\n  console.log(this.state.totalprice3)\r\n    \r\n    }\r\n\r\n  handleChange(value) {\r\n    console.log(`selected ${value}`);\r\n  }\r\n  submit=()=>{\r\n    console.log(this.state)\r\n    let order = {\r\n      \"MCH_ID\": \"41708307\",\r\n      \"ORDER_BACON\": this.state.ingredients3.bacon,\r\n      \"ORDER_CHEESE\": this.state.ingredients3.cheese,\r\n      \"ORDER_MEAT\": this.state.ingredients3.meat,\r\n      \"ORDER_REMARK\":this.state.ORDER_REMARK,\r\n      \"ORDER_SALAD\": this.state.ingredients3.salad,\r\n      \"TOTAL_FEE\": this.state.totalprice3,\r\n      \"USER_ADDRESS\": this.state.USER_ADDRESS,\r\n      \"USER_NAME\": this.state.USER_NAME,\r\n      \"USER_PHONE\": this.state.USER_PHONE,\r\n    }\r\n    console.log(order)\r\n    axios.post(\"https://5y5jmjim9l.execute-api.cn-northwest-1.amazonaws.com.cn/prod/order\", order)\r\n  .then(res => {\r\n    console.log(res);\r\n  })\r\n  .catch(err => {\r\n    console.log(err);  \r\n  })\r\n     \r\n    this.props.history.push(\"/order\");\r\n    this.props.history.go();\r\n \r\n  }\r\n  handlename = (event)=>{\r\n    if(event && event.target && event.target.value){\r\n      let value = event.target.value;\r\n      this.setState(()=>({USER_NAME:value }))\r\n    }\r\n  }\r\n  handleaddress = (event)=>{\r\n    if(event && event.target && event.target.value){\r\n      let value = event.target.value;\r\n      this.setState(()=>({USER_ADDRESS:value }))\r\n    }\r\n  }\r\n  handlephone = (event)=>{\r\n    if(event && event.target && event.target.value){\r\n      let value = event.target.value;\r\n      this.setState(()=>({USER_PHONE:value }))\r\n    }\r\n  }\r\n  handleremark = (event)=>{\r\n    if(event && event.target && event.target.value){\r\n      let value = event.target.value;\r\n      this.setState(()=>({ORDER_REMARK:value }))\r\n    }\r\n  }\r\n  checkEmail(rule, value, callback) {\r\n    var re = /^(\\w-*\\.*)+@(\\w-?)+(\\.\\w{2,})+$/;\r\n    if(re.test(value)){\r\n        callback();\r\n    }else{\r\n        \r\n    }\r\n};\r\ncheckname(rule, value, callback) {\r\n  var re = /^[a-zA-Z\\u4e00-\\u9fa5]+$/;\r\n  if(!re.test(value)){\r\n      callback(\"Please input your name!Chinese character or letter\")\r\n  }else{\r\n      \r\n  }\r\n};\r\n  checkPhone(rule, value, callback) {\r\n    if(!(/^1(3|4|5|7|8)\\d{9}$/.test(value))){\r\n        callback(\"手机号码有误，请重填\");\r\n    }else{\r\n        \r\n    }\r\n};\r\nrender(){\r\n  const { getFieldDecorator } = this.props.form;\r\n  const { autoCompleteResult } = this.state;\r\n\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 8 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 16 },\r\n    },\r\n  };\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n        offset: 8,\r\n      },\r\n    },\r\n  };\r\n  \r\n\r\n  const websiteOptions = autoCompleteResult.map(website => (\r\n    <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\r\n  ));\r\n\r\n\r\n\r\n  let buttons=\r\n  <div className={classes.butn}>\r\n    <button className={classes.confirm}\r\n    onClick={()=>{\r\n      document.getElementById(\"info\").scrollIntoView();\r\n\r\n }}\r\n >确定\r\n    </button>\r\n    <button className={classes.close}\r\n     onClick={()=>{\r\n      this.props.history.push( \"/\");\r\n      this.props.history.go();\r\n   }}\r\n    >取消</button>\r\n  </div>\r\n\r\n  const { Option } = Select;\r\n  let forms=\r\n  <div className={classes.form}>\r\n    <h2><strong>请输入你的联系信息</strong></h2>\r\n    <Form {...formItemLayout} >\r\n        <Form.Item label=\"name\">\r\n                  {getFieldDecorator('name', {\r\n                  rules: [{ \r\n                  required: true,\r\n                  message: 'Please input your name!Chinese character or letter'\r\n                },\r\n                  {\r\n                    validator: this.checkname\r\n                }\r\n                ],\r\n              })(<Input  style={{ width: 300 }}\r\n              onChange ={event => this.handlename(event)}/>)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Street\">\r\n             <Input placeholder=\"Your current address.\" style={{ width: 300 }}\r\n             onChange ={event => this.handleaddress(event)} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Phone Number\">\r\n              {getFieldDecorator('phone', {\r\n                rules: [ { \r\n                  validator: this.checkPhone, }],\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your Phone Number!',\r\n                },\r\n              )(<Input  style={{ width: 300 }}\r\n                onChange ={event => this.handlephone(event)}\r\n              />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"E-mail\">\r\n              {getFieldDecorator('email', {\r\n                rules: [\r\n                  {\r\n                    validator: this.checkEmail,\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your E-mail!',\r\n                  },\r\n                ],\r\n              })(<Input  style={{ width: 300 }}/>)}\r\n        </Form.Item><br/>\r\n        \r\n        <Form.Item label=\"E-mail\">\r\n        <TextArea  rows={3} placeholder=\"For example, don't pepper.\" style={{ width: 300 }} \r\n        onChange ={event => this.handleremark(event)}/><br/>\r\n        </Form.Item>\r\n\r\n        <Select defaultValue=\"fastest\" style={{ width: 300 }} onChange={this.handleChange}>\r\n        <Option value=\"lowest\">Jack</Option>\r\n        <Option value=\"middlest\">Lucy</Option>\r\n        </Select><br/>\r\n        <DatePicker style={{ width: 300 }}  /><br/>\r\n        \r\n      </Form>    \r\n    <button className={classes.order} onClick={this.submit} \r\n    >下单</button>\r\n  </div>\r\n\r\n  return(\r\n   <div>\r\n     <h1 className={classes.hope} ><strong> We hope is tastes well !!:)</strong></h1>\r\n    <Burger ingredients = {this.state.ingredients3} /><br/>\r\n  <h2  className={classes.hope1}> totalprice:<strong> £{Math.round(this.props.location.state.totalprice2*100)/100}</strong></h2>\r\n    {buttons}\r\n    <div id=\"info\"></div>\r\n     {forms}\r\n     <br/><p></p>\r\n     \r\n    </div>)\r\n  }\r\n}\r\nexport default withRouter(Form.create()( Info));\r\n"]},"metadata":{},"sourceType":"module"}