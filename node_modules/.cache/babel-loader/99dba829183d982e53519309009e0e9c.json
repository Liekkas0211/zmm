{"ast":null,"code":"var _jsxFileName = \"C:\\\\demo\\\\hunburger\\\\src\\\\Components\\\\UI\\\\Model\\\\Msgbox.js\";\nimport React from 'react';\nimport classes from './modal.module.css';\nimport Info from '../../../form/form';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nexport default class Modal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      // const { onClose } = this.props\n      // onClose && onClose()\n      this.setState({\n        visible: false\n      });\n      this.props.change();\n    };\n\n    this.handleConfirm = () => {\n      // const { onConfirm } = this.props\n      // onConfirm && onConfirm()\n      this.setState({\n        visible: false\n      });\n      this.props.change();\n    };\n\n    this.handleMask = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      visible: false\n    };\n  } // 首次渲染使用父组件的状态更新 modal 中的 visible 状态，只调用一次\n\n\n  componentDidMount() {\n    this.setState({\n      visible: this.props.visible\n    });\n  } // 每次接收 props 就根据父组件的状态更新 modal 中的 visible 状态，首次渲染不会调用\n\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      visible: props.visible\n    });\n  }\n\n  render() {\n    // 通过父组件传递的 visible 控制显隐\n    const _this$props = this.props,\n          title = _this$props.title,\n          children = _this$props.children;\n    const _this$state$visible = this.state.visible,\n          visible = _this$state$visible === void 0 ? true : _this$state$visible;\n    console.log(this.state.visible);\n    return visible && React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.wrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, children), React.createElement(\"div\", {\n      className: classes.operator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: classes.close,\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"\\u53D6\\u6D88\"), React.createElement(\"button\", {\n      className: classes.confirm,\n      onClick: this.props.handleConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \" \", React.createElement(Link, {\n      to: \"/info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\u786E\\u5B9A\"))), \" \", React.createElement(Route, {\n      path: \"/info\",\n      children: React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/demo/hunburger/src/Components/UI/Model/Msgbox.js"],"names":["React","classes","Info","BrowserRouter","Router","Route","Link","withRouter","Modal","Component","constructor","props","handleClose","setState","visible","change","handleConfirm","handleMask","state","componentDidMount","componentWillReceiveProps","render","title","children","console","log","wrapper","modal","content","operator","close","confirm"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport classes from'./modal.module.css';\r\nimport Info from '../../../form/form'\r\nimport { BrowserRouter as Router, Route, Link,withRouter } from 'react-router-dom'\r\nexport default class Modal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            visible: false\r\n        }\r\n    }\r\n    \r\n    // 首次渲染使用父组件的状态更新 modal 中的 visible 状态，只调用一次\r\n    componentDidMount() {\r\n        this.setState({\r\n            visible: this.props.visible\r\n        })\r\n    }\r\n\r\n    // 每次接收 props 就根据父组件的状态更新 modal 中的 visible 状态，首次渲染不会调用\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            visible: props.visible\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        // const { onClose } = this.props\r\n        // onClose && onClose()\r\n        this.setState({\r\n            visible: false\r\n        })\r\n        this.props.change();\r\n    }\r\n    handleConfirm = () => {\r\n        // const { onConfirm } = this.props\r\n        // onConfirm && onConfirm()\r\n        this.setState({\r\n            visible: false\r\n        })\r\n        this.props.change();\r\n       \r\n          }\r\n    \r\n    handleMask = () => {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n    }\r\n    render() {\r\n        // 通过父组件传递的 visible 控制显隐\r\n        const { title, children } = this.props\r\n\r\n        const { visible = true } = this.state\r\n        console.log(this.state.visible)\r\n        return visible &&\r\n        (\r\n            <Router >\r\n            <div className={classes.wrapper}>\r\n                <div className={classes.modal}>\r\n                    <div className={classes.title}>{title}</div>\r\n                    <div className={classes.content}>{children}</div>\r\n                    <div className={classes.operator}>\r\n                        <button className={classes.close} onClick={this.handleClose}>取消</button>\r\n                        <button className={classes.confirm} onClick={this.props.handleConfirm} > <Link to =\"/info\">确定</Link>\r\n                        </button>\r\n                        \r\n                    </div> <Route  path=\"/info\"  children={<Info/>}/>\r\n                </div>\r\n                \r\n            </div> \r\n           \r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}