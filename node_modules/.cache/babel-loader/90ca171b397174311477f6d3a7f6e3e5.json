{"ast":null,"code":"var _jsxFileName = \"C:\\\\demo\\\\hunburger\\\\src\\\\Components\\\\UI\\\\Model\\\\Msgbox.js\";\nimport React from 'react';\nimport classes from './modal.module.css';\nimport Info from '../../../form/form';\nimport { BrowserRouter as Router, Route, Link, Switch, withRouter } from 'react-router-dom';\nimport BurgerBuilder from '../../../Container/BurgerBuilder/BurgerBuilder';\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      // const { onClose } = this.props\n      // onClose && onClose()\n      this.setState({\n        visible: false\n      });\n      this.props.change();\n    };\n\n    this.handleConfirm = () => {\n      // const { onConfirm } = this.props\n      // onConfirm && onConfirm()\n      this.setState({\n        visible: false\n      });\n      this.props.change();\n    };\n\n    this.handleMask = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      visible: false,\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      }\n    };\n  } // 首次渲染使用父组件的状态更新 modal 中的 visible 状态，只调用一次\n\n\n  componentDidMount() {\n    this.setState({\n      visible: this.props.visible\n    });\n  } // 每次接收 props 就根据父组件的状态更新 modal 中的 visible 状态，首次渲染不会调用\n\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      visible: props.visible\n    });\n  }\n\n  render() {\n    // 通过父组件传递的 visible 控制显隐\n    const _this$props = this.props,\n          title = _this$props.title,\n          children = _this$props.children;\n    const _this$state$visible = this.state.visible,\n          visible = _this$state$visible === void 0 ? true : _this$state$visible;\n    console.log(this.state.ingredients);\n    return visible && React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.wrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, children), React.createElement(\"div\", {\n      className: classes.operator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: classes.close,\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"\\u53D6\\u6D88\"), React.createElement(\"button\", {\n      className: classes.confirm,\n      onClick: () => {\n        this.props.handleConfirm();\n        this.props.history.push({\n          pathname: '/info',\n          state: {\n            ingredients\n          }\n        });\n        this.props.history.go();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" \\u786E\\u5B9A\")))));\n  }\n\n}\n\nexport default withRouter(Modal);","map":{"version":3,"sources":["C:/demo/hunburger/src/Components/UI/Model/Msgbox.js"],"names":["React","classes","Info","BrowserRouter","Router","Route","Link","Switch","withRouter","BurgerBuilder","Modal","Component","constructor","props","handleClose","setState","visible","change","handleConfirm","handleMask","state","ingredients","salad","bacon","cheese","meat","componentDidMount","componentWillReceiveProps","render","title","children","console","log","wrapper","modal","content","operator","close","confirm","history","push","pathname","go"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,EAA8CC,MAA9C,EAAqDC,UAArD,QAAsE,kBAAtE;AACA,OAAOC,aAAP,MAAyB,gDAAzB;;AAEA,MAAMC,KAAN,SAAoBV,KAAK,CAACW,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA2BnBC,WA3BmB,GA2BL,MAAM;AAChB;AACA;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd;AAGA,WAAKH,KAAL,CAAWI,MAAX;AACH,KAlCkB;;AAAA,SAmCnBC,aAnCmB,GAmCH,MAAM;AAClB;AACA;AACA,WAAKH,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd;AAGA,WAAKH,KAAL,CAAWI,MAAX;AAEG,KA3CY;;AAAA,SA6CnBE,UA7CmB,GA6CN,MAAM;AACf,WAAKJ,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KAjDkB;;AAEf,SAAKI,KAAL,GAAa;AACTJ,MAAAA,OAAO,EAAE,KADA;AAETK,MAAAA,WAAW,EAAE;AACTC,QAAAA,KAAK,EAAE,CADE;AAETC,QAAAA,KAAK,EAAE,CAFE;AAGTC,QAAAA,MAAM,EAAE,CAHC;AAITC,QAAAA,IAAI,EAAE;AAJG;AAFJ,KAAb;AASH,GAZ+B,CAchC;;;AACAC,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,QAAL,CAAc;AACVC,MAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG;AADV,KAAd;AAGH,GAnB+B,CAqBhC;;;AACAW,EAAAA,yBAAyB,CAACd,KAAD,EAAQ;AAC7B,SAAKE,QAAL,CAAc;AACVC,MAAAA,OAAO,EAAEH,KAAK,CAACG;AADL,KAAd;AAGH;;AAyBDY,EAAAA,MAAM,GAAG;AACL;AADK,wBAEuB,KAAKf,KAF5B;AAAA,UAEGgB,KAFH,eAEGA,KAFH;AAAA,UAEUC,QAFV,eAEUA,QAFV;AAAA,gCAGsB,KAAKV,KAH3B,CAGGJ,OAHH;AAAA,UAGGA,OAHH,oCAGa,IAHb;AAILe,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,WAAvB;AACA,WAAOL,OAAO,IAEV,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAEf,OAAO,CAACgC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEhC,OAAO,CAACiC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEjC,OAAO,CAAC4B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCA,KAAhC,CADJ,EAEI;AAAK,MAAA,SAAS,EAAE5B,OAAO,CAACkC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCL,QAAlC,CAFJ,EAGI;AAAK,MAAA,SAAS,EAAE7B,OAAO,CAACmC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAEnC,OAAO,CAACoC,KAA3B;AAAkC,MAAA,OAAO,EAAE,KAAKvB,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAQ,MAAA,SAAS,EAAEb,OAAO,CAACqC,OAA3B;AAAoC,MAAA,OAAO,EAAE,MAAI;AAC7C,aAAKzB,KAAL,CAAWK,aAAX;AACA,aAAKL,KAAL,CAAW0B,OAAX,CAAmBC,IAAnB,CAAwB;AACpBC,UAAAA,QAAQ,EAAC,OADW;AAEpBrB,UAAAA,KAAK,EAAC;AACFC,YAAAA;AADE;AAFc,SAAxB;AAMA,aAAKR,KAAL,CAAW0B,OAAX,CAAmBG,EAAnB;AACH,OATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,CAHJ,CADJ,CADA,CAFJ;AA4BH;;AApF+B;;AAuFpC,eAAelC,UAAU,CAACE,KAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport classes from'./modal.module.css';\r\nimport Info from '../../../form/form'\r\nimport { BrowserRouter as Router, Route, Link,Switch,withRouter} from 'react-router-dom'\r\nimport BurgerBuilder from'../../../Container/BurgerBuilder/BurgerBuilder';\r\n\r\nclass Modal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            visible: false,\r\n            ingredients: {\r\n                salad: 0,\r\n                bacon: 0,\r\n                cheese: 0,\r\n                meat: 0\r\n            },\r\n        }\r\n    }\r\n    \r\n    // 首次渲染使用父组件的状态更新 modal 中的 visible 状态，只调用一次\r\n    componentDidMount() {\r\n        this.setState({\r\n            visible: this.props.visible\r\n        })\r\n    }\r\n\r\n    // 每次接收 props 就根据父组件的状态更新 modal 中的 visible 状态，首次渲染不会调用\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            visible: props.visible\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        // const { onClose } = this.props\r\n        // onClose && onClose()\r\n        this.setState({\r\n            visible: false\r\n        })\r\n        this.props.change();\r\n    }\r\n    handleConfirm = () => {\r\n        // const { onConfirm } = this.props\r\n        // onConfirm && onConfirm()\r\n        this.setState({\r\n            visible: false\r\n        })\r\n        this.props.change();\r\n       \r\n          }\r\n    \r\n    handleMask = () => {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n    }\r\n    render() {\r\n        // 通过父组件传递的 visible 控制显隐\r\n        const { title, children } = this.props\r\n        const { visible = true } = this.state\r\n        console.log(this.state.ingredients)\r\n        return visible &&\r\n        (\r\n            <Router >\r\n            <div className={classes.wrapper}>\r\n                <div className={classes.modal}>\r\n                    <div className={classes.title}>{title}</div>\r\n                    <div className={classes.content}>{children}</div>\r\n                    <div className={classes.operator}>\r\n                        <button className={classes.close} onClick={this.handleClose}>取消</button>\r\n                        <button className={classes.confirm} onClick={()=>{\r\n                            this.props.handleConfirm();\r\n                            this.props.history.push({\r\n                                pathname:'/info',\r\n                                state:{\r\n                                    ingredients\r\n                                }\r\n                            });\r\n                            this.props.history.go()\r\n                        }} > 确定\r\n                        </button>\r\n         \r\n                    </div> \r\n                </div>\r\n               \r\n            </div>  \r\n               \r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Modal)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}