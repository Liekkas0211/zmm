{"ast":null,"code":"import _defineProperty from \"C:\\\\demo\\\\hunburger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\demo\\\\hunburger\\\\src\\\\Container\\\\BurgerBuilder\\\\BurgerBuilder.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Burger from '../../Components/Burger/Burger';\nimport BuildControls from '../../Components/Burger/OrderSummary/BuildControls';\nconst ingredient_prices = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 0,\n      purchaseable: false,\n      sumprice: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      }\n    };\n\n    this.addIngredientHandler = type => {\n      const updatedIngredients = _objectSpread({}, this.state.ingredients); //这样的话不会改变原来的ingredients的值，相当于复制该数组。 \n      // const newPrice = ingredient_prices[type];//增加的原料的价格                 \n\n\n      updatedIngredients[type] = this.state.ingredients[type] + 1; //更新原料的数量\n\n      const newPrice = this.state.totalPrice + ingredient_prices[type];\n      this.state.sumprice[type] = newPrice * updatedIngredients[type];\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      console.log(this.state.sumprice[type]);\n\n      if (this.state.totalPrice > 0) {\n        this.setState({\n          purchaseable: true\n        });\n      }\n\n      console.log(this.state.totalPrice);\n      console.log(this.state.purchaseable); // this.updatePurchaseState(this.totalPrice);\n    };\n\n    this.removeIngredientHandler = type => {\n      const newCount = this.state.ingredients[type] - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      const priceSubstracted = ingredient_prices[type];\n      const newPrice = this.state.totalPrice - priceSubstracted;\n      updatedIngredients[type] = newCount;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n\n      if (this.state.totalPrice > 0) {\n        this.setState({\n          purchaseable: true\n        });\n      }\n\n      console.log(this.state.totalPrice);\n      console.log(this.state.purchaseable); // this.updatePurchaseState(updatedIngredients);\n    };\n  }\n\n  render() {\n    const disableInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0 ? true : false;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      totalPrice: this.state.totalPrice,\n      IngredientAdded: this.addIngredientHandler,\n      RemoveIngredient: this.removeIngredientHandler,\n      disabled: disableInfo,\n      purchaseable: this.state.purchaseable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:/demo/hunburger/src/Container/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BuildControls","ingredient_prices","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchaseable","sumprice","addIngredientHandler","type","updatedIngredients","newPrice","setState","console","log","removeIngredientHandler","newCount","priceSubstracted","render","disableInfo","key"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,oDAA1B;AACA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAMA,MAAMC,aAAN,SAA4BR,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCS,KADkC,GAC1B;AACJC,MAAAA,WAAW,EAAE;AACTN,QAAAA,KAAK,EAAE,CADE;AAETG,QAAAA,KAAK,EAAE,CAFE;AAGTF,QAAAA,MAAM,EAAE,CAHC;AAITC,QAAAA,IAAI,EAAE;AAJG,OADT;AAOJK,MAAAA,UAAU,EAAE,CAPR;AAQJC,MAAAA,YAAY,EAAE,KARV;AASJC,MAAAA,QAAQ,EAAC;AACLT,QAAAA,KAAK,EAAE,CADF;AAELG,QAAAA,KAAK,EAAE,CAFF;AAGLF,QAAAA,MAAM,EAAE,CAHH;AAILC,QAAAA,IAAI,EAAE;AAJD;AATL,KAD0B;;AAAA,SAyBlCQ,oBAzBkC,GAyBVC,IAAD,IAAU;AAC7B,YAAMC,kBAAkB,qBACb,KAAKP,KAAL,CAAWC,WADE,CAAxB,CAD6B,CAG5B;AACD;;;AACAM,MAAAA,kBAAkB,CAACD,IAAD,CAAlB,GAA2B,KAAKN,KAAL,CAAWC,WAAX,CAAuBK,IAAvB,IAA+B,CAA1D,CAL6B,CAK+B;;AAC5D,YAAME,QAAQ,GAAG,KAAKR,KAAL,CAAWE,UAAX,GAAwBR,iBAAiB,CAACY,IAAD,CAA1D;AACA,WAAKN,KAAL,CAAWI,QAAX,CAAoBE,IAApB,IAA0BE,QAAQ,GAAED,kBAAkB,CAACD,IAAD,CAAtD;AACA,WAAKG,QAAL,CAAc;AACVR,QAAAA,WAAW,EAAEM,kBADH;AAEVL,QAAAA,UAAU,EAAEM;AAFF,OAAd;AAKAE,MAAAA,OAAO,CAACC,GAAR,CAAa,KAAKX,KAAL,CAAWI,QAAX,CAAoBE,IAApB,CAAb;;AACA,UAAG,KAAKN,KAAL,CAAWE,UAAX,GAAsB,CAAzB,EAA2B;AACvB,aAAKO,QAAL,CAAc;AAAEN,UAAAA,YAAY,EAAC;AAAf,SAAd;AACH;;AACDO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWE,UAAvB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWG,YAAvB,EAlB6B,CAmB9B;AACF,KA7CiC;;AAAA,SA8ClCS,uBA9CkC,GA8CPN,IAAD,IAAS;AAC/B,YAAMO,QAAQ,GAAG,KAAKb,KAAL,CAAWC,WAAX,CAAuBK,IAAvB,IAA+B,CAAhD;;AACA,YAAMC,kBAAkB,qBACjB,KAAKP,KAAL,CAAWC,WADM,CAAxB;;AAGA,YAAMa,gBAAgB,GAAGpB,iBAAiB,CAACY,IAAD,CAA1C;AACA,YAAME,QAAQ,GAAG,KAAKR,KAAL,CAAWE,UAAX,GAAwBY,gBAAzC;AACAP,MAAAA,kBAAkB,CAACD,IAAD,CAAlB,GAA2BO,QAA3B;AACA,WAAKJ,QAAL,CAAc;AACVR,QAAAA,WAAW,EAAEM,kBADH;AAEVL,QAAAA,UAAU,EAAEM;AAFF,OAAd;;AAIA,UAAG,KAAKR,KAAL,CAAWE,UAAX,GAAsB,CAAzB,EAA2B;AACvB,aAAKO,QAAL,CAAc;AAAEN,UAAAA,YAAY,EAAC;AAAf,SAAd;AACH;;AACDO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWE,UAAvB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWG,YAAvB,EAhB+B,CAiBhC;AACF,KAhEiC;AAAA;;AAiElCY,EAAAA,MAAM,GAAE;AACJ,UAAMC,WAAW,qBACT,KAAKhB,KAAL,CAAWC,WADF,CAAjB;;AAGA,SAAI,IAAIgB,GAAR,IAAeD,WAAf,EAA2B;AACxBA,MAAAA,WAAW,CAACC,GAAD,CAAX,GAAoBD,WAAW,CAACC,GAAD,CAAX,IAAoB,CAArB,GAA0B,IAA1B,GAAiC,KAApD;AACF;;AACD,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAI,KAAKjB,KAAL,CAAWC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,EAEK,oBAAC,aAAD;AACI,MAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAD3B;AAEI,MAAA,eAAe,EAAE,KAAKG,oBAF1B;AAGI,MAAA,gBAAgB,EAAE,KAAKO,uBAH3B;AAII,MAAA,QAAQ,EAAEI,WAJd;AAKI,MAAA,YAAY,EAAE,KAAKhB,KAAL,CAAWG,YAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFL,CADH;AAYH;;AApFiC;;AAsFtC,eAAeJ,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Burger from '../../Components/Burger/Burger';\r\nimport BuildControls from '../../Components/Burger/OrderSummary/BuildControls';\r\nconst ingredient_prices = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 0,\r\n        purchaseable: false,\r\n        sumprice:{\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        }\r\n    }\r\n    // updatePurchaseState = (ingredients) => {\r\n    //     // const Pricesum = Object.keys(ingredients) //获取到每一个原材料，key是他们的名字\r\n    //     //                 .map(key => ingredients[key])\r\n    //     //                 .reduce((sum, current) => sum + current , 0) //reduce类似一个累加器，可以把所有key的值加起来。\r\n    //     this.setState({purchaseable: Pricesum > 0})\r\n    // }\r\n    // 将每一个原料的数量加起来，如果大于0才可以结算。\r\n//计算每一个原材料的总价\r\n    addIngredientHandler = (type) => {\r\n        const updatedIngredients = {\r\n                ...this.state.ingredients\r\n        }//这样的话不会改变原来的ingredients的值，相当于复制该数组。 \r\n        // const newPrice = ingredient_prices[type];//增加的原料的价格                 \r\n        updatedIngredients[type] = this.state.ingredients[type] + 1;//更新原料的数量\r\n        const newPrice = this.state.totalPrice + ingredient_prices[type];\r\n        this.state.sumprice[type]=newPrice* updatedIngredients[type];\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice\r\n            \r\n        });\r\n        console.log( this.state.sumprice[type])\r\n        if(this.state.totalPrice>0){\r\n            this.setState({ purchaseable:true})\r\n        }\r\n        console.log(this.state.totalPrice)\r\n        console.log(this.state.purchaseable)\r\n       // this.updatePurchaseState(this.totalPrice);\r\n    }\r\n    removeIngredientHandler = (type) =>{\r\n        const newCount = this.state.ingredients[type] - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        const priceSubstracted = ingredient_prices[type];\r\n        const newPrice = this.state.totalPrice - priceSubstracted;     \r\n        updatedIngredients[type] = newCount;\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice\r\n        });\r\n        if(this.state.totalPrice>0){\r\n            this.setState({ purchaseable:true})\r\n        }\r\n        console.log(this.state.totalPrice)\r\n        console.log(this.state.purchaseable)\r\n       // this.updatePurchaseState(updatedIngredients);\r\n    }\r\n    render(){\r\n        const disableInfo = {\r\n             ...this.state.ingredients\r\n        }\r\n        for(let key in disableInfo){\r\n           disableInfo[key] = (disableInfo[key] <= 0) ? true : false;\r\n        }\r\n        return (\r\n           <div>\r\n                <Burger ingredients = {this.state.ingredients}/>\r\n                <BuildControls     \r\n                    totalPrice={this.state.totalPrice}\r\n                    IngredientAdded={this.addIngredientHandler}\r\n                    RemoveIngredient={this.removeIngredientHandler}\r\n                    disabled={disableInfo}\r\n                    purchaseable={this.state.purchaseable}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}