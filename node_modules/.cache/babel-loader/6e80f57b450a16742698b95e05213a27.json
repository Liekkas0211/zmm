{"ast":null,"code":"import _defineProperty from \"C:\\\\demo\\\\hunburger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from '../actions/actionTypes';\n\nconst updateObject = (oldObject, updatedProperties) => {\n  return _objectSpread({}, oldObject, {}, updatedProperties);\n};\n\nconst initialState = {\n  ingredients: {\n    salad: 0,\n    bacon: 0,\n    cheese: 0,\n    meat: 0\n  },\n  totalPrice: 0,\n  purchaseable: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst addIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    purchaseable: true,\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n  const updatedIng = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n  };\n  const updatedIngs = updateObject(state.ingredients, updatedIng);\n  const updatedStt = {\n    purchaseable: true,\n    ingredients: updatedIngs,\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n  };\n  return updateObject(state, updatedStt);\n};\n\nconst auto = (state, action) => {\n  const updatedIngredient = {\n    salad: 1,\n    bacon: 1,\n    cheese: 1,\n    meat: 2\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    purchaseable: true,\n    ingredients: updatedIngredients,\n    totalPrice: 4.2\n  };\n  console.log(ingredients);\n  return updateObject(state, updatedState);\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return removeIngredient(state, action);\n\n    case actionTypes.AUTO:\n      return auto(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/demo/hunburger/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","oldObject","updatedProperties","initialState","ingredients","salad","bacon","cheese","meat","totalPrice","purchaseable","INGREDIENT_PRICES","addIngredient","state","action","updatedIngredient","ingredientName","updatedIngredients","updatedState","removeIngredient","updatedIng","updatedIngs","updatedStt","auto","console","log","reducer","type","ADD_INGREDIENT","REMOVE_INGREDIENT","AUTO"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\nconst updateObject = (oldObject, updatedProperties) =>{\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}\r\n\r\n\r\nconst initialState = {\r\n    ingredients:{\r\n        salad: 0,\r\n        bacon: 0,\r\n        cheese: 0,\r\n        meat: 0\r\n    },\r\n    totalPrice:0,\r\n    purchaseable:false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nconst addIngredient = (state,action)=>{\r\n    const updatedIngredient = {[action.ingredientName]:state.ingredients[action.ingredientName] + 1};\r\n    const updatedIngredients = updateObject(state.ingredients,updatedIngredient);\r\n    const updatedState = {\r\n        purchaseable:true,\r\n        ingredients : updatedIngredients,\r\n        totalPrice : state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n    };\r\n    return updateObject(state,updatedState);\r\n}\r\n\r\nconst removeIngredient = (state,action)=>{\r\n    const updatedIng = {[action.ingredientName]:state.ingredients[action.ingredientName] - 1};\r\n    const updatedIngs = updateObject(state.ingredients,updatedIng);\r\n    const updatedStt = {\r\n        purchaseable:true,\r\n        ingredients : updatedIngs,\r\n        totalPrice : state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n    };\r\n    return updateObject(state,updatedStt);\r\n}\r\nconst auto = (state,action)=>{\r\n    \r\n    const updatedIngredient = { \r\n        salad: 1,\r\n        bacon: 1,\r\n        cheese: 1,\r\n        meat: 2};\r\n    const updatedIngredients = updateObject(state.ingredients,updatedIngredient);\r\n    const updatedState = {\r\n        purchaseable:true,\r\n        ingredients : updatedIngredients,\r\n        totalPrice :4.2\r\n    };console.log(ingredients )\r\n    return updateObject(state,updatedState);\r\n}\r\n\r\nconst reducer = (state=initialState, action) =>{\r\n    switch(action.type){\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state,action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state,action);\r\n        case actionTypes.AUTO: return  auto(state,action)\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}