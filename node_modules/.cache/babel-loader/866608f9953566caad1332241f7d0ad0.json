{"ast":null,"code":"var _jsxFileName = \"C:\\\\demo\\\\hunburger\\\\src\\\\Components\\\\UI\\\\Model\\\\Msgbox.js\";\nimport React from 'react';\nimport classes from './modal.module.css';\nexport default class Modal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      // const { onClose } = this.props\n      // onClose && onClose()\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleConfirm = () => {\n      // const { onConfirm } = this.props\n      // onConfirm && onConfirm()\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleMask = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      visible: false\n    };\n  } // 首次渲染使用父组件的状态更新 modal 中的 visible 状态，只调用一次\n\n\n  componentDidMount() {\n    this.setState({\n      visible: this.props.visible\n    });\n  } // 每次接收 props 就根据父组件的状态更新 modal 中的 visible 状态，首次渲染不会调用\n\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      visible: props.visible\n    });\n  }\n\n  render() {\n    // 通过父组件传递的 visible 控制显隐\n    const _this$props = this.props,\n          title = _this$props.title,\n          children = _this$props.children;\n    const _this$state$visible = this.state.visible,\n          visible = _this$state$visible === void 0 ? false : _this$state$visible;\n    return visible && React.createElement(\"div\", {\n      className: classes.wrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, children), React.createElement(\"div\", {\n      className: classes.operator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: classes.close,\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\u53D6\\u6D88\"), React.createElement(\"button\", {\n      className: classes.confirm,\n      onClick: this.handleConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\u786E\\u5B9A\"))), React.createElement(\"div\", {\n      className: \"classes.mask\",\n      onClick: this.handleMask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/demo/hunburger/src/Components/UI/Model/Msgbox.js"],"names":["React","classes","Modal","Component","constructor","props","handleClose","setState","visible","handleConfirm","handleMask","state","componentDidMount","componentWillReceiveProps","render","title","children","wrapper","modal","content","operator","close","confirm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAmB,oBAAnB;AAEA,eAAe,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqBnBC,WArBmB,GAqBL,MAAM;AAChB;AACA;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KA3BkB;;AAAA,SA4BnBC,aA5BmB,GA4BH,MAAM;AAClB;AACA;AACA,WAAKF,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KAlCkB;;AAAA,SAmCnBE,UAnCmB,GAmCN,MAAM;AACf,WAAKH,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KAvCkB;;AAEf,SAAKG,KAAL,GAAa;AACTH,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH,GAN8C,CAQ/C;;;AACAI,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,QAAL,CAAc;AACVC,MAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG;AADV,KAAd;AAGH,GAb8C,CAe/C;;;AACAK,EAAAA,yBAAyB,CAACR,KAAD,EAAQ;AAC7B,SAAKE,QAAL,CAAc;AACVC,MAAAA,OAAO,EAAEH,KAAK,CAACG;AADL,KAAd;AAGH;;AAqBDM,EAAAA,MAAM,GAAG;AACL;AADK,wBAEuB,KAAKT,KAF5B;AAAA,UAEGU,KAFH,eAEGA,KAFH;AAAA,UAEUC,QAFV,eAEUA,QAFV;AAAA,gCAIuB,KAAKL,KAJ5B,CAIGH,OAJH;AAAA,UAIGA,OAJH,oCAIa,KAJb;AAML,WAAOA,OAAO,IAEV;AAAK,MAAA,SAAS,EAAEP,OAAO,CAACgB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEhB,OAAO,CAACiB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEjB,OAAO,CAACc,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCA,KAAhC,CADJ,EAEI;AAAK,MAAA,SAAS,EAAEd,OAAO,CAACkB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCH,QAAlC,CAFJ,EAGI;AAAK,MAAA,SAAS,EAAEf,OAAO,CAACmB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAEnB,OAAO,CAACoB,KAA3B;AAAkC,MAAA,OAAO,EAAE,KAAKf,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAQ,MAAA,SAAS,EAAEL,OAAO,CAACqB,OAA3B;AAAoC,MAAA,OAAO,EAAE,KAAKb,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CAHJ,CADJ,EASI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,OAAO,EAAE,KAAKC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CAFJ;AAcH;;AA7D8C","sourcesContent":["import React from 'react';\r\nimport classes from'./modal.module.css';\r\n\r\nexport default class Modal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            visible: false\r\n        }\r\n    }\r\n    \r\n    // 首次渲染使用父组件的状态更新 modal 中的 visible 状态，只调用一次\r\n    componentDidMount() {\r\n        this.setState({\r\n            visible: this.props.visible\r\n        })\r\n    }\r\n\r\n    // 每次接收 props 就根据父组件的状态更新 modal 中的 visible 状态，首次渲染不会调用\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            visible: props.visible\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        // const { onClose } = this.props\r\n        // onClose && onClose()\r\n        this.setState({\r\n            visible: false\r\n        })\r\n    }\r\n    handleConfirm = () => {\r\n        // const { onConfirm } = this.props\r\n        // onConfirm && onConfirm()\r\n        this.setState({\r\n            visible: false\r\n        })\r\n    }\r\n    handleMask = () => {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n    }\r\n    render() {\r\n        // 通过父组件传递的 visible 控制显隐\r\n        const { title, children } = this.props\r\n\r\n        const { visible = false } = this.state\r\n\r\n        return visible &&\r\n        (\r\n            <div className={classes.wrapper}>\r\n                <div className={classes.modal}>\r\n                    <div className={classes.title}>{title}</div>\r\n                    <div className={classes.content}>{children}</div>\r\n                    <div className={classes.operator}>\r\n                        <button className={classes.close} onClick={this.handleClose}>取消</button>\r\n                        <button className={classes.confirm} onClick={this.handleConfirm}>确定</button>\r\n                    </div>\r\n                </div>\r\n                <div className='classes.mask' onClick={this.handleMask}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}